select version();

select 5+3+6;

select 5*(3+4);

select * from movies;

insert into movies(movie_id, movie_name, movie_genre, imdb_ratings)
values(101, 'Vertigo', 'Mystery, Romance', 8.3 ),
(102, 'The Shawshank Redemption', 'Crime Friction', 9.3 ),
(103, '12 Angry Men', 'Drama', 9.0 ),
(104, 'The Dark Knight', 'Action', 9.0 ),
(105, 'The Matrix', 'Sci-Fi', 8.7 ),
(106, 'Se7ven', 'Crime', 8.6 ),
(107, 'Intersteller', 'Adventure', 8.6 ),
(108, 'The Lion King', 'Animation', 8.5 );

select *from movies;
 
 update movies
 set movie_genre = 'Drama, Crime'
 where movie_id = 103;
 
 delete from movies 
 where movie_id = 108;
 
 select * from movies
 where imdb_ratings > 8.7;
 
 select * from movies
 where imdb_ratings between 8.5 and 9.0;
 
 
 select * from movies
 where movie_genre = 'Action';
 
select movie_name, movie_genre from movies
 where imdb_ratings < 9.0;
 
  select * from movies
 where imdb_ratings in (8.7,9.0);
 
 create table employees
 (Emp_id int not null primary key,
 Emp_name varchar(40), Email varchar(40), Gender varchar(10),
 Department varchar(40), Address varchar(40), Salary real);

 select * from employees;
 
 select distinct address from employees;
 
 select * from employees where email is null;
 
 select * from employees order by salary desc;
 
 alter table employees
 rename  column address to city;
 
 select * from employees where
 city = 'Denver' and salary < 168251;
 
 select * from employees where 
 city = 'Stonewall' or department = 'Binder and Binder Accessories';
 
 select * from employees  order by salary desc limit 5;
 
 select * from employees order by salary desc limit 5 offset 3;
 
 select * from employees order by salary desc fetch first 3 row only;
 
 select * from employees order by salary desc offset 3 rows fetch first 5 row only;
 
 select emp_name, email from employees where emp_name like 'A%';
 
 select emp_name, email from employees where emp_name like 'S%';
 
 select emp_name, email from employees where emp_name like '%r';
 
 select emp_name, email from employees where emp_name like '%ete%';
 
 select emp_name, email from employees where emp_name like '_u%';
 
 select sum(salary) as total_salary from employees;
 
 select avg(salary) as total_salary from employees;
 
 select min(salary) as total_salary from employees;
 
 select count(distinct department) as total_dept from employees;
 
 select distinct department from employees;
 
 update employees
 set department = 'Appliances'
 where department is null;
 
 select city, avg(salary) as average_salary
 from employees group by city order by average_salary desc;
 
 select gender, max(salary) as maximum_salary
 from employees group by gender;
 
 select city, count(emp_id)from employees
 group by city;
 
 select city, avg(salary) as average_salary from employees
 group by city having avg(salary) > 80000;
 
 select city, count(emp_id) from employees
 group by city having count(emp_id) < 30 order by count(emp_id);
 
  --Case Expression in PostgreSQL
 
 select department, city, salary,
 Case
 when salary > 45000 and salary< 55000
 then 'Low Salary'
 when salary > 55000 and salary < 80000
 then'Medium Salary'
 when salary > 80000 then 'High Salary'
 end as salary_range
 from employees
 order by salary desc;
 
 select emp_name, department, city, salary
 from employees where salary > (select avg(salary) from employees);
 
 /* Sql functions */
 
 select abs(-100);
 
 select greatest(2,54,67,4,90,56.5,70);
 
 select least(2,54,67,4,90,56.5,70);
 
  select mod(54,10);
  
  select power(2,3);
  
  select sqrt(100);
  
  select sin(0);
  
  select ceil(6.45);
  
  select floor(6.45);
  
  --String Functions
  
  select char_length('India is a democracy');
  
  select concat('PostgreSQL ', 'is', ' Insteresting');
  
  select left('India is a democracy' , 5);
  
  select right ('India is a democracy' , 12);
  
  select repeat('India', 5);
  
  select reverse ('India is a democracy' );
  
  --User defined function
  
  create or replace function 
  count_emails()
  returns integer as $total_emails$
  declare
      total_emails integer;
  begin
      select count(email) into total_emails
	  from employees;
	  return total_emails;
  end;
  $total_emails$ language plpgsql;
  
   select count_emails();
  
  
  
 
 
 
 
 
 
 
  
  
 
 
 
 
 
 
 
 
 


